#ifndef DATAPOINTATTRIBUTE_HPP
#define DATAPOINTATTRIBUTE_HPP

#include <string>
#include <unordered_map>

namespace forecast_io
{

namespace parsers
{

const std::string DataPointAttribute_NAME = "DataPointAttribute";

enum DataPointAttribute
{
	APPARENT_TEMPERATURE,
	APPARENT_TEMPERATURE_MAX,
	APPARENT_TEMPERATURE_MAX_TIME,
	APPARENT_TEMPERATURE_MIN,
	APPARENT_TEMPERATURE_MIN_TIME,
	CLOUD_COVER,
	DEW_POINT,
	HUMIDITY,
	ICON,
	MOON_PHASE,
	NEAREST_STORM_BEARING,
	NEAREST_STORM_DISTANCE,
	OZONE,
	PRECIPITATION_ACCUMULATION,
	PRECIPITATION_INTENSITY,
	PRECIPITATION_INTENSITY_MAX,
	PRECIPITATION_INTENSITY_MAX_TIME,
	PRECIPITATION_PROBABILITY,
	PRECIPITATION_TYPE,
	PRESSURE,
	SUMMARY,
	SUNRISE_TIME,
	SUNSET_TIME,
	TEMPERATURE,
	TEMPERATURE_MAX,
	TEMPERATURE_MAX_TIME,
	TEMPERATURE_MIN,
	TEMPERATURE_MIN_TIME,
	TIME,
	VISIBILITY,
	WIND_SPEED,
	WIND_BEARING,

	DataPointAttribute_MAX = WIND_BEARING,
	DataPointAttribute_COUNT = DataPointAttribute_MAX + 1
};


// Typedefs
typedef std::unordered_map<std::string, DataPointAttribute> DataPointAttributeNameMap;

}

}

#endif // DATAPOINTATTRIBUTE_HPP
